{"version":3,"sources":["header-anim.js"],"names":["width","height","largeHeader","canvas","ctx","points","target","animateHeader","mouseMove","e","posx","posy","pageX","pageY","clientX","clientY","document","body","scrollLeft","documentElement","scrollTop","x","y","scrollCheck","resize","window","innerWidth","innerHeight","style","animate","i","clearRect","Math","abs","getDistance","active","circle","drawLines","draw","requestAnimationFrame","shiftPoint","p","TweenLite","to","random","originX","originY","ease","Circ","easeInOut","onComplete","closest","beginPath","moveTo","lineTo","strokeStyle","stroke","Circle","pos","rad","color","_this","this","radius","arc","PI","fillStyle","fill","p1","p2","pow","getElementById","getContext","px","py","push","length","j","placed","k","undefined","c","initHeader","initAnimation","addEventListener","addListeners"],"mappings":"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","file":"header-anim.min.js","sourcesContent":["(function() {\n\n    var width, height, largeHeader, canvas, ctx, points, target, animateHeader = true;\n\n    // Main\n    initHeader();\n    initAnimation();\n    addListeners();\n\n    function initHeader() {\n        width = window.innerWidth;\n        height = window.innerHeight;\n        target = {x: width/2, y: height/2};\n\n        largeHeader = document.getElementById('large-header');\n        largeHeader.style.height = height+'px';\n\n        canvas = document.getElementById('demo-canvas');\n        canvas.width = width;\n        canvas.height = height;\n        ctx = canvas.getContext('2d');\n\n        // create points\n        points = [];\n        for(var x = 0; x < width; x = x + width/20) {\n            for(var y = 0; y < height; y = y + height/20) {\n                var px = x + Math.random()*width/20;\n                var py = y + Math.random()*height/20;\n                var p = {x: px, originX: px, y: py, originY: py };\n                points.push(p);\n            }\n        }\n\n        // for each point find the 5 closest points\n        for(var i = 0; i < points.length; i++) {\n            var closest = [];\n            var p1 = points[i];\n            for(var j = 0; j < points.length; j++) {\n                var p2 = points[j]\n                if(!(p1 == p2)) {\n                    var placed = false;\n                    for(var k = 0; k < 5; k++) {\n                        if(!placed) {\n                            if(closest[k] == undefined) {\n                                closest[k] = p2;\n                                placed = true;\n                            }\n                        }\n                    }\n\n                    for(var k = 0; k < 5; k++) {\n                        if(!placed) {\n                            if(getDistance(p1, p2) < getDistance(p1, closest[k])) {\n                                closest[k] = p2;\n                                placed = true;\n                            }\n                        }\n                    }\n                }\n            }\n            p1.closest = closest;\n        }\n\n        // assign a circle to each point\n        for(var i in points) {\n            var c = new Circle(points[i], 2+Math.random()*2, 'rgba(255,255,255,0.3)');\n            points[i].circle = c;\n        }\n    }\n\n    // Event handling\n    function addListeners() {\n        if(!('ontouchstart' in window)) {\n            window.addEventListener('mousemove', mouseMove);\n        }\n        window.addEventListener('scroll', scrollCheck);\n        window.addEventListener('resize', resize);\n    }\n\n    function mouseMove(e) {\n        var posx = posy = 0;\n        if (e.pageX || e.pageY) {\n            posx = e.pageX;\n            posy = e.pageY;\n        }\n        else if (e.clientX || e.clientY)    {\n            posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n            posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n        }\n        target.x = posx;\n        target.y = posy;\n    }\n\n    function scrollCheck() {\n        if(document.body.scrollTop > height) animateHeader = false;\n        else animateHeader = true;\n    }\n\n    function resize() {\n        width = window.innerWidth;\n        height = window.innerHeight;\n        largeHeader.style.height = height+'px';\n        canvas.width = width;\n        canvas.height = height;\n    }\n\n    // animation\n    function initAnimation() {\n        animate();\n        for(var i in points) {\n            shiftPoint(points[i]);\n        }\n    }\n\n    function animate() {\n        if(animateHeader) {\n            ctx.clearRect(0,0,width,height);\n            for(var i in points) {\n                // detect points in range\n                if(Math.abs(getDistance(target, points[i])) < 4000) {\n                    points[i].active = 0.3;\n                    points[i].circle.active = 0.6;\n                } else if(Math.abs(getDistance(target, points[i])) < 20000) {\n                    points[i].active = 0.1;\n                    points[i].circle.active = 0.3;\n                } else if(Math.abs(getDistance(target, points[i])) < 40000) {\n                    points[i].active = 0.02;\n                    points[i].circle.active = 0.1;\n                } else {\n                    points[i].active = 0;\n                    points[i].circle.active = 0;\n                }\n\n                drawLines(points[i]);\n                points[i].circle.draw();\n            }\n        }\n        requestAnimationFrame(animate);\n    }\n\n    function shiftPoint(p) {\n        TweenLite.to(p, 1+1*Math.random(), {x:p.originX-50+Math.random()*100,\n            y: p.originY-50+Math.random()*100, ease:Circ.easeInOut,\n            onComplete: function() {\n                shiftPoint(p);\n            }});\n    }\n\n    // Canvas manipulation\n    function drawLines(p) {\n        if(!p.active) return;\n        for(var i in p.closest) {\n            ctx.beginPath();\n            ctx.moveTo(p.x, p.y);\n            ctx.lineTo(p.closest[i].x, p.closest[i].y);\n            ctx.strokeStyle = 'rgba(156,217,249,'+ p.active+')';\n            ctx.stroke();\n        }\n    }\n\n    function Circle(pos,rad,color) {\n        var _this = this;\n\n        // constructor\n        (function() {\n            _this.pos = pos || null;\n            _this.radius = rad || null;\n            _this.color = color || null;\n        })();\n\n        this.draw = function() {\n            if(!_this.active) return;\n            ctx.beginPath();\n            ctx.arc(_this.pos.x, _this.pos.y, _this.radius, 0, 2 * Math.PI, false);\n            ctx.fillStyle = 'rgba(215,217,249,'+ _this.active+')';\n            ctx.fill();\n        };\n    }\n\n    // Util\n    function getDistance(p1, p2) {\n        return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);\n    }\n\n})();\n"]}